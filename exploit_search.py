from pymetasploit3.msfrpc import MsfRpcClient

def connect_to_metasploit(password='password123', username='msf', port=55553):
    try:
        client = MsfRpcClient(password, username=username, port=port, ssl=False)
        print("[+] Connected to Metasploit\n")
        return client
    except Exception as e:
        print(f"[!] Failed to connect to Metasploit: {e}")
        exit(1)

def get_module_details(client, module_name):
    """Fetch detailed information for the module."""
    try:
        module = client.modules.use('exploit', module_name)
        description = module.description
        rank = module.rank
        print(f"üì¶ Module: {module_name}")
        print(f"   Rank: {rank}")
        print(f"   Description: {description if description else 'No description available.'}")
        print('-' * 60)
    except Exception as e:
        print(f"Error fetching details for module {module_name}: {e}")

def search_exploits(client, keyword):
    print(f"üîç Searching Metasploit for: '{keyword}'...\n")
    results = client.modules.search(keyword)

    found = False
    for module in results:
        if module['type'] == 'exploit' and module['fullname'].startswith('exploit/windows/'):
            found = True
            get_module_details(client, module['fullname'])

    if not found:
        print("‚ùå No Windows exploits found with that keyword.\n")

def main():
    client = connect_to_metasploit()

    # You can add more keywords here for better coverage based on port or service
    keywords = ['windows/httpapi', 'windows/http', '5357', 'microsoft_httpapi', 'windows']

    for keyword in keywords:
        search_exploits(client, keyword)

if __name__ == '__main__':
    main()

