# exploit_matcher.py

known_exploits = {
    5357: [
        {"service": "http", "product": "Microsoft HTTPAPI httpd 2.0", "cve": "CVE-2017-7269", "desc": "SMBv1 buffer overflow RCE"}
    ],
    445: [
        {"service": "smb", "product": "Windows SMBv1", "cve": "CVE-2017-0144", "desc": "EternalBlue RCE exploit"}
    ],
    21: [
        {"service": "ftp", "product": "vsftpd 2.3.4", "cve": "CVE-2011-2523", "desc": "Backdoor command execution"}
    ]
}

def match_exploits(port, service, product):
    matches = []
    if port in known_exploits:
        for exp in known_exploits[port]:
            if exp['service'] in service and exp['product'] in product:
                matches.append(exp)
    return matches

# Example usage:
if __name__ == "__main__":
    port = 5357
    service = "http"
    product = "Microsoft HTTPAPI httpd 2.0"

    results = match_exploits(port, service, product)
    if results:
        print("ðŸ”“ Potential Exploits Found:")
        for exp in results:
            print(f"  - CVE: {exp['cve']} | {exp['desc']}")
    else:
        print("âœ… No known exploits matched.")

